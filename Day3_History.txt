    1  sudo apt-get update; sudo apt-get install     apt-transport-https     ca-certificates     curl     gnupg-agent     software-properties-common -y 
    2  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    3  sudo add-apt-repository    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
    4     $(lsb_release -cs) \
    5     stable"
    6  sudo apt-get update
    7  sudo apt-get install docker-ce docker-ce-cli containerd.io
    8  docker version 
    9  history 
   10  git clone https://github.com/amitvashisttech/k8s-docker-vmware-08-June-2020.git
   11  docker version
   12  ls 
   13  cd k8s-docker-vmware-08-June-2020/
   14  ls
   15  git pull 
   16  ls
   17  cd 01-Docker/
   18  ls
   19  01-Setup/
   20  ls
   21  cd 01-Setup/
   22  ls
   23  cat install-node.sh 
   24  cd ..
   25  ls
   26  cd ..
   27  ls
   28  docker version 
   29  cd 
   30  docker images 
   31  docker ps -a 
   32  docker run ubuntu echo "Welcome to Docker"
   33  docker images 
   34  cd /var/lib/docker/
   35  ls
   36  docker ps 
   37  docker ps -a
   38  exit
   39  sudo apt -get install
   40  apt-get update
   41  apt-get install     apt-transport-https     ca-certificates     curl     gnupg-agent     software-properties-common
   42  apt-key fingerprint 0EBFCD88
   43  dd-apt-repository    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   44     $(lsb_release -cs) \
   45     stable"
   46  add-apt-repository    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   47     $(lsb_release -cs) \
   48     stable"
   49  apt-get update
   50  apt-get install docker-ce docker-ce-cli containerd.io
   51  docker version
   52  ls
   53  git clone https://github.com/amitvashisttech/k8s-docker-vmware-08-June-2020.gitâ€©
   54  docker
   55  docker version
   56  docker run ubuntu echo "Welcome to docker"
   57  docker images
   58  docker run ubuntu echo "Welcome to docker"
   59  exit
   60  ls
   61  docker images
   62  cd /var/lib/docker/
   63  ls
   64  cd image/
   65  ls
   66  cd overlay2/
   67  ls
   68  cat repositories.json 
   69  ls
   70  cd imagedb/
   71  ls
   72  cd content/
   73  ls
   74  cd sha256/
   75  ls
   76  cd ..
   77  ls
   78  cd ..
   79  ls
   80  cd ..
   81  ls
   82  cd 
   83  ls
   84  docker images 
   85  docker run ubuntu:16.04 echo "Welcome to docker"
   86  docker images 
   87  docker pull centos:7 
   88  docker images
   89  history 
   90  docker search ubuntu
   91  history 
   92  docker images 
   93  docker ps 
   94  docker ps -a
   95  ls
   96  docker run -it ubuntu:16.04
   97  docker run -it centos/7
   98  docker run -it centos:7
   99  docker ps 
  100  docker run -it ubuntu:16.04
  101  docker ps 
  102  docker ps -a
  103  docker ps 
  104  docker kill 71f5dbd7e7c3
  105  docker ps 
  106  ls
  107  docker ps -a
  108  docker ps 
  109  docker ps -q
  110  docker kill $(docker ps -q)
  111  docker ps 
  112  history 
  113  ls
  114  docker ps 
  115  docker run -it centos:7
  116  docker ps 
  117  ip addr 
  118  netstat -tulnp 
  119  netstat -tulnp | grep -i http
  120  docker ps 
  121  docker inspect e7eb02064295
  122  curl 172.17.0.2/info.html
  123  docker inspect e7eb02064295
  124  ip addr 
  125  curl 172.17.0.2/info.html
  126  docker ps 
  127  docker run -it centos:7
  128  docker ps 
  129  docker attach eb8ec1794e49
  130  docker attach e7eb02064295
  131  curl 172.17.0.2/info.html
  132  docker kill e7eb02064295
  133  docker ps 
  134  docker ps -a
  135  docker start e7eb02064295
  136  docker ps 
  137  docker attach e7eb02064295
  138  history 
  139  ls
  140  docker ps 
  141  docker attach e7eb02064295
  142  docker ps 
  143  docker commit -p -m "My Apache" e7eb02064295 centos7-httpd-image:v1
  144  docker ps 
  145  docker images 
  146  docker run -it centos7-httpd-image:v1 
  147  docker ps 
  148  docker inspect 52d4b258f4e2
  149  curl 172.17.0.4
  150  curl 172.17.0.4/info.html
  151  docker run -itd centos7-httpd-image:v1 
  152  docker ps 
  153  curl 172.17.0.5/info.html
  154  curl 172.17.0.4/info.html
  155  docker run -itd centos7-httpd-image:v1 
  156  docker ps 
  157  docker run -itd --name myapache-node-1 centos7-httpd-image:v1 
  158  docker run -itd --name myapache-node-2 centos7-httpd-image:v1 
  159  docker ps 
  160  docker inspect myapache-node-2
  161  history 
  162  docker run -itd --name myapache-node-2 centos7-httpd-image:v1 
  163  docker ps 
  164  docker attach 810822056b34
  165  docker kill $(docker ps -q )
  166  docker ps 
  167  docker ps -a
  168  docker rm $(docker ps -q )
  169  docker rm $(docker ps -aq )
  170  docker ps 
  171  docker ps -a
  172  docker images
  173  ls
  174  cd k8s-docker-vmware-08-June-2020/
  175  ls
  176  cd 01-Docker/
  177  ls
  178  mkdir 02-DockerFile/apache -p 
  179  ls
  180  cd 02-DockerFile/
  181  ls
  182  cd apache/
  183  ls
  184  vim Dockerfile
  185  docker images 
  186  docker build -t  ubuntu-apache-image:v1 -f Dockerfile .
  187  docker images 
  188  docker run -d ubuntu-apache-image:v1
  189  docker ps 
  190  docker inspect 53b93545ea15
  191  curl 172.17.0.2
  192  docker images 
  193  docker run -d -p 80:80 ubuntu-apache-image:v1
  194  docker images 
  195  docker ps 
  196  netstat -tulnp | grep -i http
  197  netstat -tulnp | grep -i httpd
  198  netstat -tulnp | grep -i 80
  199  docker ps 
  200  docker run -d -p 80:80 ubuntu-apache-image:v1
  201  docker run -d -p 8080:80 ubuntu-apache-image:v1
  202  docker run -d -p 8081:80 ubuntu-apache-image:v1
  203  docker ps 
  204  ls
  205  docker
  206  cd 
  207  ls
  208  docker images
  209  docker history ubuntu-apache-image:v1 
  210  docker inspect ubuntu-apache-image:v1 
  211  ls
  212  cd k8s-docker-vmware-08-June-2020/
  213  ls
  214  git add . ; git commit -m "DockerFile" ; git push 
  215  ls
  216  history > Day1_History.txt
  217  git add . ; git commit -m "DockerFile" ; git push 
  218  ls
  219  cd 01-Docker/
  220  ls
  221  cd 
  222  ls
  223  cd ..
  224  ls
  225  cd 
  226  ls
  227  cd k8s-docker-vmware-08-June-2020/
  228  ls
  229  cd 01-Docker/
  230  ls
  231  cd 02-DockerFile/
  232  ls
  233  curl localhost:8080
  234  ls
  235  cp -rf apache apache_v2
  236  ls
  237  cd apache_v2/
  238  ls
  239  vim info.html
  240  ls
  241  vim Dockerfile 
  242  ls
  243  docker build -t  ubuntu-apache-image:v2 -f Dockerfile .
  244  docker images
  245  docker run -d -p 8082:80 ubuntu-apache-image:v2
  246  docker ps 
  247  docker run -d -P  ubuntu-apache-image:v2
  248  docker ps 
  249  docker run -d -P  ubuntu-apache-image:v1
  250  docker ps 
  251  ls
  252  vi Dockerfile 
  253  ls
  254  vim info.html 
  255  docker build -t  ubuntu-apache-image:v3 -f Dockerfile .
  256  docker run -d -P  ubuntu-apache-image:v3
  257  docker ps 
  258  ls
  259  cd ..
  260  ls
  261  cd ..
  262  history > Day1_History.txt 
  263  git add . ; git commit -m "DockerFile" ; git push 
  264  ls
  265  kubectl run -it ubuntu-test --image=ubuntu:16.04  --restart=Never -- /bin/bash
  266  kubectl run -it ubuntu-test-1 --image=busybox:1.28  --restart=Never -- sh
  267  kubectl get svc 
  268  kubectl get nodes -o wide 
  269  curl 172.31.2.133:30793
  270  curl  172.31.0.196:30793
  271  curl 172.31.2.133:30793
  272  watch -n .5 kubectl get pods 
  273  ls
  274  kubectl delete -f k8s-docker-vmware-08-June-2020/02-K8s/04-Deployment/helloworld.yml 
  275  cat k8s-docker-vmware-08-June-2020/02-K8s/04-Deployment/helloworld.yml
  276  ls
  277  cd k8s-docker-vmware-08-June-2020/
  278  ls
  279  git pull
  280  ls
  281  cd 02-K8s/
  282  ls
  283  cd ..
  284  ls
  285  cd 02-K8s/
  286  ls
  287  cd 01-Setup/
  288  ls
  289  ip addr 
  290  docker ps -q
  291  docker kill $(docker ps -q)
  292  docker rm $(docker ps -qa)
  293  ip addr 
  294  ls
  295  vim install-kubernetes.sh 
  296  ls
  297  ./install-kubernetes.sh 
  298  ls
  299  docker ps 
  300  netstat -tulnp | grep -i kubelet
  301  ls
  302  rm -rf /etc/kubernetes
  303  ls
  304  vim install-kubernetes.sh 
  305  apt-get remove docker 
  306  apt-get remove docker* 
  307  ls
  308  ./install-kubernetes.sh 
  309  KUBECONFIG=/etc/kubernetes/admin.confKUBECONFIG=/etc/kubernetes/admin.conf
  310  kubectl get nodes 
  311  l
  312  docker images 
  313  ls
  314  vim install-kubernetes.sh 
  315  apt-get remove docker kubelet kubeadm kubectl -y 
  316  ls
  317  ip addr 
  318  vim install-kubernetes.sh 
  319  ./install-kubernetes.sh 
  320  docker version 
  321  ls
  322  cat install-kubernetes.sh 
  323  vim install-node.sh 
  324  ls
  325  cd ..
  326  ls
  327  cd ..
  328  ls
  329  git add . ; git commit -m "Update K8s Script for v1.18.0"; git push 
  330  kubectl get nodes 
  331  cd
  332  mkdir -p $HOME/.kube
  333  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  334  sudo chown $(id -u):$(id -g) $HOME/.kube/config
  335  kubectl get nodes 
  336  kubectl get pods 
  337  kubectl get pods  -n kube-system
  338  kubectl logs coredns-66bff467f8-sr528  -n kube-system
  339  kubectl describe coredns-66bff467f8-sr528  -n kube-system
  340  kubectl logs coredns-66bff467f8-sr528  -n kube-system
  341  kubectl get pods  -n kube-system
  342  kubectl describe  pods  coredns-66bff467f8-sr528 -n kube-system
  343  kubectl  get nodes 
  344  kubectl get pods 
  345  kubectl get pods  -n kube-system
  346  kubectl get nodes 
  347  kubectl describe nodes ip-172-31-0-196
  348  ls
  349  kubectl describe nodes ip-172-31-0-196
  350  ls
  351  cd k8s-docker-vmware-08-June-2020/
  352  kubectl get nodes 
  353  ls
  354  cd 02-K8s/
  355  ls
  356  cd 01-Setup/
  357  ls
  358  cat install-kubernetes.sh 
  359  kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
  360  kubectl get pods --all-namespaces
  361  kubectl get nodes 
  362  kubectl get pods --all-namespaces
  363  ls
  364  vim install-kubernetes.sh 
  365  ls
  366  cd ..
  367  git add . ; git commit -m "Calico"; git push 
  368  cd 
  369  kubectl get nodes 
  370  kubectl run docket-get-started --image=amitvashist7/get-started:part2 --port=80
  371  kubectl get pods 
  372  kubectl get svc 
  373  kubectl get nodes -o wide 
  374  kubectl get pod  -o wide 
  375  ls
  376  cd k8s-docker-vmware-08-June-2020/
  377  ls
  378  git config --list 
  379  ls
  380  cd 02-K8s/
  381  ls
  382  cd 01-Setup/
  383  ls
  384  ip addr 
  385  ls
  386  vim install-kubernetes.sh 
  387  ls
  388  rm 1
  389  ls
  390  kubectl get nodes 
  391  kubectl clutser-info
  392  kubectl cluster-info
  393  kubectl versions
  394  kubectl version
  395  kubectl api-versions
  396  kubectl api-resources
  397  kubectl proxy --port=8080 &
  398  curl http://localhost:8080
  399  curl http://localhost:8080/api/
  400  curl http://localhost:8080/apii/v1
  401  curl http://localhost:8080/apii/v1/pods
  402  curl http://localhost:8080/api/v1/pods
  403  kubectl get pods -n kube-system
  404  curl http://localhost:8080/api/v1/pods
  405  curl http://localhost:8080/api/v1/
  406  curl http://localhost:8080/a
  407  curl http://localhost:8080/apis/apiextensions.k8s.io/v1beta1/
  408  ls
  409  kubectl get pods 
  410  kubectl delete pod docket-get-started
  411  kubectl get pods 
  412  kubectl get pod -n kube-system
  413  kubectl get pod -n kube-system -o wide 
  414  cd 
  415  ls
  416  cat /etc/kubernetes/admin.conf 
  417  kubectl config view
  418  kubectl current-context
  419  kubectl get current-context
  420  kubectl current-context
  421  kubectl config current-context
  422  ls
  423  cat /etc/kubernetes/admin.conf 
  424  ls
  425  cat .kube/config 
  426  ls
  427  cd k8s-docker-vmware-08-June-2020/
  428  ls
  429  git pull
  430  ls
  431  cd 02-K8s/
  432  ls
  433  cd 02-First-App/
  434  ls
  435  vim helloworld.yml 
  436  kubectl create -f helloworld.yml 
  437  kubectl get pods 
  438  kubectl get pods -o wide 
  439  kubectl describe pod nodehelloworld 
  440  kubectl get pods -o wide 
  441  kubectl get nodes 
  442  history 
  443  cd ..
  444  ls
  445  cd ..
  446  ls
  447  history > Day2_History.txt
  448  git add . ; git commit -m "First Pod"; git push 
  449  kubectl get pods 
  450  ls
  451  cat Day2_History.txt 
  452  kubectl get nodes -o wide 
  453  kubectl get pods 
  454  kubectl delete pod nodehelloworld
  455  kubectl get pods 
  456  ls
  457  git pull
  458  ls
  459  kubectl get ns 
  460  ls
  461  kubectl create -f 02-K8s/02-First-App/helloworld.yml 
  462  kubectl get pods --all-namespaces
  463  ls
  464  cd 02-K8s/
  465  ls
  466  cd 03-Replication-controller/
  467  ls
  468  vim helloworld-repl-controller.yml 
  469  ls
  470  rm 1
  471  vim helloworld-repl-controller.yml 
  472  ls
  473  kubectl create -f helloworld-repl-controller.yml 
  474  kubectl get pods 
  475  kubectl get rc
  476  kubectl describe rc 
  477  kubectl describe pod helloworld-controller-p6jsz
  478  kubectl get rc
  479  kubectl describe rc 
  480  ls
  481  cat helloworld-repl-controller.yml 
  482  ls
  483  kubectl get pods 
  484  kubectl describe pod nodehelloworld
  485  kubectl get pods 
  486  kubectl desribe pods  helloworld-controller-kp44d
  487  kubectl describe pods  helloworld-controller-kp44d
  488  ls
  489  kubectl get pods 
  490  kubectl get rc 
  491  kubectl scale --replicas=1 rc helloworld-controller
  492  kubectl get rc 
  493  kubectl get pods 
  494  kubectl scale --replicas=10 rc helloworld-controller
  495  kubectl get pods 
  496  kubectl scale --replicas=1 rc helloworld-controller
  497  ls
  498  kubectl get pods 
  499  kubectl delete pod helloworld-controller-kp44d
  500  kubectl get pods 
  501  kubectl get pods -o wide 
  502  kubectl delete pod helloworld-controller-snmrz
  503  kubectl get pods -o wide 
  504  kubectl get pods 
  505  ls
  506  kubectl get rc 
  507  kubectl scale --replicas=5 rc helloworld-controller
  508  kubectl get pods 
  509  kubectl delete rc helloworld-controller
  510  kubectl get pods 
  511  ls
  512  cd ..
  513  ls
  514  cd ..
  515  ls
  516  history > Day2_History.txt 
  517  ls
  518  git add . ; git commit -m "First Pod"; git push 
  519  kubectl get pods 
  520  kubectl scale --replicas=5 rc helloworld-controller
  521  ls
  522  git pull
  523  ls
  524  cd 02-K8s/
  525  ls
  526  cd 04-Deployment/
  527  ls
  528  cat helloworld.yml 
  529  ls
  530  kubectl create -f helloworld.yml 
  531  kubectl run hello-world --image=busybox --dry-run
  532  kubectl run --help
  533  vim helloworld.yml 
  534  kubectl create -f helloworld.yml 
  535  kubectl proxy --port=8080 &
  536  vim helloworld.yml 
  537  kubectl create -f helloworld.yml 
  538  vi helloworld.yml 
  539  kubectl create -f helloworld.yml 
  540  kubectl get deployment
  541  kubectl get rs
  542  kubectl get pods 
  543  kubectl delete pod helloworld-deployment-78cf6987f9-2xdc2 helloworld-deployment-78cf6987f9-jczlw
  544  kubectl get pods 
  545  kubectl scale --replicas=5 deployment helloworld-deployment
  546  kubectl get pods 
  547  ls
  548  kubectl get pods 
  549  kubectl get pods -o wide
  550  kubectl get ps
  551  kubectl get pods 
  552  kubectl get deployment 
  553  kubectl expose deployment helloworld-deployment --type=NodePort
  554  kubectl get svc 
  555  kubectl delete svc docket-get-started
  556  ls
  557  kubectl get svc 
  558  kubectl describe svc helloworld-deployment
  559  kubectl get pods -o wide 
  560  kubectl get pods 
  561  kubectl delete pod nodehelloworld ubuntu-test ubuntu-test-1 
  562  kubectl get pods
  563  kubectl describe svc helloworld-deployment
  564  kubectl scale --replicas=2 deployment helloworld-deployment
  565  kubectl get pods
  566  kubectl describe svc helloworld-deployment
  567  kubectl get svc 
  568  kubectl set image deployment helloworld-deployment k8s-demo=amitvashist7/k8s-tiny-web:2
  569  kubectl get pods
  570  kubectl get svc 
  571  kubectl describe svc helloworld-deployment
  572  kubectl scale --replicas=4 deployment helloworld-deployment
  573  kubectl get svc 
  574  kubectl describe svc helloworld-deployment
  575  kubectl set image deployment helloworld-deployment k8s-demo=amitvashist7/k8s-tiny-web:3 --record
  576  kubectl get svc 
  577  kubectl get pods
  578  kubectl get rs 
  579  kubectl get pods
  580  kubectl rollout undo deployment helloworld-deployment
  581  kubectl get rs 
  582  kubectl get pods
  583  kubectl rollout history deployment helloworld-deployment
  584  kubectl rollout history deployment helloworld-deployment --revision=1
  585  kubectl rollout history deployment helloworld-deployment --revision=3
  586  kubectl rollout history deployment helloworld-deployment --revision=4
  587  kubectl rollout status deployment helloworld-deployment
  588  kubectl scale --replicas=10 deployment helloworld-deployment
  589  kubectl get pods
  590  kubectl set image deployment helloworld-deployment k8s-demo=amitvashist7/k8s-tiny-web:4 --record
  591  kubectl rollout status deployment helloworld-deployment
  592  kubectl rollout history deployment helloworld-deployment
  593  kubectl rollout undo deployment helloworld-deployment
  594  kubectl rollout history deployment helloworld-deployment --revision=1
  595  kubectl rollout undo deployment helloworld-deployment --to-revision=1
  596  ls
  597  cd ..
  598  ls
  599  cd ..
  600  ls
  601  history > Day2_History.txt 
  602  git add . ; git commit -m "Deployment"; git push 
  603  kubectl get nodes 
  604  kubectl get nodes -o wide 
  605  ls
  606  kubectl get pods -n kube-system
  607  kubectl run hello-k8s --image=nginx --port=80 --dry-run 
  608  kubectl run hello-k8s --image=nginx --port=80 --dry-run=clinet
  609  kubectl run hello-k8s --image=nginx --port=80 --dry-run=none
  610  kubectl run hello-k8s --image=nginx --port=80 --dry-run=server
  611  kubectl get pods 
  612  kubectl delete pod hello-k8ss
  613  kubectl delete pod hello-k8s
  614  kubectl run hello-k8s --image=nginx --port=80 --dry-run=server
  615  kubectl get pods 
  616  kubectl run hello-k8s --image=nginx --port=80 --dry-run=clinet
  617  kubectl get pods 
  618  kubectl run hello-k8s --image=nginx --port=80 --dry-run=none
  619  kubectl get pods 
  620  kubectl delete pod hello-k8s
  621  kubectl run hello-k8s --image=nginx --port=80 --dry-run=server
  622  kubectl run hello-k8s --image=nginx --port=80
  623  kubectl get pod s
  624  kubectl get pods
  625  kubectl get pods 
  626  kubectl get nodes 
  627  ls
  628  cd k8s-docker-vmware-08-June-2020/
  629  ls
  630  cd 02-K8s/
  631  ls
  632  cd ..
  633  ls
  634  git pull 
  635  ls
  636  cd 02-K8s/
  637  ls
  638  cd 05-App-with-Service
  639  ls
  640  cat helloworld.yml 
  641  kubectl create -f helloworld.yml 
  642  kubectl get pods 
  643  kubectl delete pods  hello-k8s
  644  kubectl get pods 
  645  ls
  646  cat helloworld-service.yml 
  647  ls
  648  cat helloworld-tomcat.yaml 
  649  ls
  650  kubectl create -f helloworld-service.yml 
  651  cat helloworld-service.yml 
  652  kubectl get svc 
  653  kubectl delete svc helloworld-deployment
  654  kubectl get svc 
  655  kubectl edit svc helloworld-service
  656  kubectl get svc 
  657  kubectl get pods -o wide 
  658  kubectl get nodes 
  659  curl 3.133.115.87:30809
  660  curl 3.133.144.168:30809
  661  ls
  662  cat helloworld.yml 
  663  cat helloworld-service.yml 
  664  cat helloworld-tomcat.yaml 
  665  kubectl get svc 
  666  kubectl describe  svc  helloworld-service
  667  kubectl create -f helloworld-tomcat.yaml 
  668  kubectl get pods 
  669  kubectl describe  svc  helloworld-service
  670  kubectl edit  svc  helloworld-service
  671  kubectl get pods 
  672  cat helloworld-service.yml 
  673  cat helloworld-tomcat.yaml 
  674  cat helloworld.yml 
  675  kubectl describe  svc  helloworld-service
  676  kubectl get svc 
  677  ls
  678  cd ..
  679  ls
  680  cd 05-App-with-Service
  681  cd ..
  682  ls
  683  cd 05-App-with-Service-2/
  684  ls
  685  cat pythonweb-service.yaml 
  686  ls
  687  cd..
  688  cd ..
  689  ls
  690  cd ..
  691  ls
  692  history > Day3_History.txt
  693  git add . ; git commit -m "Deployment"; git push 
  694  ls
  695  cd 02-K8s/05-App-with-Service
  696  cd ..
  697  ls
  698  cd 05-App-with-Service-2/
  699  ls
  700  cd ..
  701  ls
  702  kubectl delete -f 05-App-with-Service
  703  ls
  704  cd 05-App-with-Service-2/
  705  ls
  706  cat helloworld-pythonwebapp.yaml 
  707  cat pythonweb-service.yaml 
  708  ls
  709  cat helloworld.yml 
  710  cat helloworld-service.yml 
  711  ls
  712  kubectl get svc 
  713  ls
  714  cd ..
  715  ls
  716  kubectl create -f 05-App-with-Service-2/
  717  kubectl get pods,svc 
  718  kubectl edit service/helloworld-service
  719  kubectl get pods,svc 
  720  kubectl edit service/pythonwebpp-service
  721  ls
  722  kubectl get pods,svc 
  723  curl 3.133.144.168:30862
  724  curl 3.133.144.168:30305
  725  ls
  726  cd 05-App-with-Service
  727  ls
  728  cd ..
  729  ls
  730  cd 05-App-with-Service-2/
  731  ls
  732  diff helloworld-service.yml pythonweb-service.yaml 
  733  cat helloworld-service.yml 
  734  cat pythonweb-service.yaml 
  735  cd ..
  736  ls
  737  kubectl delete -f 05-App-with-Service-2/
  738  ls
  739  git pull 
  740  ls
  741  cd 06-Dashboard/
  742  ls
  743  cat README.md 
  744  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-rc7/aio/deploy/recommended.yaml
  745  kubectl get ns 
  746  kubectl get pods,svc -n kubernetes-dashboard
  747  ls
  748  cat sample-user.yaml 
  749  kubectl create -f sample-user.yaml
  750  cat README.md 
  751  kubectl get secret -n kubernetes-dashboard
  752  kubectl get pods,svc -n kubernetes-dashboard
  753  kubectl edit svc service/kubernetes-dashboard -n kubernetes-dashboard
  754  kubectl edit svc kubernetes-dashboard -n kubernetes-dashboard
  755  kubectl get pods,svc -n kubernetes-dashboard
  756  kubectl get pods,svc -n kubernetes-dashboard -o wide 
  757  cat README.md 
  758  kubectl get secret -n kubernetes-dashboard
  759  kubectl describe secret  admin-user-1-token-z2z56 -n kubernetes-dashboard
  760  ls
  761  cd ..
  762  ls
  763  kubectl create -f 04-Deployment/helloworld.yml 
  764  kubectl get deploy
  765  ls
  766  cd 06-Dashboard/
  767  ls
  768  cat sample-user.yaml 
  769  ls
  770  cd ..
  771  ls
  772  kubectl delete -f 06-Dashboard/
  773  ls
  774  cd 06-Dashboard/
  775  ls
  776  vim README.md 
  777  cd ..
  778  ls
  779  vim  06-Dashboard/README.md 
  780  ls
  781  git add . ; git commit -m "06-Dashboard"; git push 
  782  ls
  783  cd ..
  784  ls
  785  git pull 
  786  ls
  787  cd 02-K8s/
  788  ls
  789  cd 07-Labels/
  790  ls
  791  cat 
  792  ls
  793  cat helloworld-nodeselector.yml 
  794  ls
  795  cat helloworld-nodeselector.yml 
  796  cat helloworld-nodeselector_1.yml 
  797  ls
  798  kubectl create -f helloworld-nodeselector_1.yml 
  799  ls
  800  vim helloworld-nodeselector_1.yml 
  801  ls
  802  rm 1
  803  kubectl create -f helloworld-nodeselector_1.yml 
  804  kubectl get pods 
  805  kubectl delete deploy helloworld-deployment
  806  ls
  807  kubectl create -f helloworld-nodeselector_1.yml 
  808  kubectl get pods 
  809  mv helloworld-nodeselector_1.yml helloworld-nodeselector-1.yaml
  810  ls
  811  cp -rf helloworld-nodeselector-1.yaml helloworld-nodeselector-2.yaml
  812  ls
  813  cat helloworld-nodeselector.yml 
  814  vim helloworld-nodeselector-2.yaml 
  815  ls
  816  kubectl create -f helloworld-nodeselector-2.yaml 
  817  ls
  818  rm -rf helloworld-nodeselector.yml 
  819  kubectl get deploy 
  820  kubectl get pods 
  821  kubectl describe pod helloworld-deployment-57986b947d-pt969
  822  kubectl get pods --show-labels
  823* kubectl get nodes --s
  824  kubectl label nodes ip-172-31-0-196 hardware=virtual
  825  kubectl get nodes --show-labels
  826  kubectl get pods -o wide 
  827  kubectl scale --replicas=10 deploy helloworld-deployment
  828  kubectl get pods -o wide 
  829  kubectl get nodes --show-labels
  830  kubectl label nodes ip-172-31-2-133 hardware=virtual
  831  kubectl get nodes --show-labels
  832  kubectl get pods -o wide 
  833  kubectl scale --replicas=15 deploy helloworld-deployment
  834  kubectl get pods -o wide 
  835  kubectl scale --replicas=3 deploy helloworld-deployment
  836  kubectl get pods -o wide 
  837  kubectl describe pod helloworld-deployment-2-7fd7bbcd7-lmrxf
  838  kubectl label nodes ip-172-31-2-133 env=prod
  839  kubectl get pods -o wide 
  840  ls
  841  kubectl get deploy 
  842  kubectl get rs
  843  ls
  844  kubectl label nodes ip-172-31-2-133 env-
  845  kubectl label nodes ip-172-31-2-133 hardware-
  846  kubectl get nodes --show-labels
  847  kubectl get pods 
  848  kubectl scale --replicas=10 deploy helloworld-deployment-2
  849  kubectl get pods 
  850  kubectl get nodes --show-labels
  851  kubectl label nodes ip-172-31-0-196 hardware-
  852  ls
  853  cd ..
  854  ls
  855  cd ..
  856  ls
  857  history > Day3_History.txt 
  858  git add . ; git commit -m "07-Labels"; git push 
  859  history 
  860  ls
  861  kubectl get pods 
  862  kubectl delete -f 02-K8s/07-Labels/
  863  ls
  864  cd 02-K8s/
  865  ls
  866  cd 07-Labels/
  867  kubectl create -f helloworld-nodeselector-1.yaml 
  868  kubectl get pods 
  869  kubectl describe pod helloworld-deployment-57986b947d-p44gr
  870  ls
  871  cat helloworld-nodeselector-1.yaml 
  872  ls
  873  cd ..
  874  ls
  875  git pull
  876  ls
  877  cd 08-HealthCheck/
  878  ls
  879  cat helloworld-healthcheck.yml 
  880  kubectl create -f helloworld-healthcheck.yml 
  881  kubectl get deployments 
  882  kubectl delete deploy --all
  883  kubectl create -f helloworld-healthcheck.yml 
  884  kubectl get deply
  885  kubectl get deplot
  886  kubectl get deploy
  887  kubectl get pods 
  888  kubectl describe pod helloworld-deployment-585fb455cb-btp4v
  889  kubectl get pods 
  890  kubectl exec -it helloworld-deployment-585fb455cb-m92t5 -- sh 
  891  vi /etc/hosts
  892  kubectl get nodes -o wide 
  893  kubectl get nodes -o wide | awk -F " " '{print $1}'
  894  kubectl get nodes -o wide | awk -F " " '{print $1}' >> /etc/hosts
  895  vi /etc/hosts
  896  kubectl get nodes -o wide | awk -F " " '{print $1}'
  897  ping ip-172-31-0-196
  898  nslookup ip-172-31-0-196
  899  kubectl exec -it helloworld-deployment-585fb455cb-m92t5 -- sh 
  900  kubectl run -i --tty busybox-1 --image=busybox:1.28 --restart=Never -- sh
  901  kubectl edit deploy helloworld-deployment
  902  kubectl get pods 
  903  kubectl delete pod busybox-1
  904  kubectl get pods 
  905  kubectl describe pod helloworld-deployment-85f99c955-2pbst
  906  kubectl get pods 
  907  kubectl edit deploy helloworld-deployment
  908  kubectl get pods 
  909  history 
  910  kubectl run -i --tty busybox-1 --image=busybox:1.28 --restart=Never -- sh
  911  kubectl run -i --tty centos-1 --image=centos:7 --restart=Never -- bash
  912  cd ..
  913  ls
  914  cd ..
  915  ls
  916  history > Day3_History.txt 
  917  ls
  918  git add . ; git commit -m "08-HealthCheck" ; git push
  919  history > Day3_History.txt 
  920  git add .
  921  git status 
  922  git add . ; git commit -m "08-HealthCheck" ; git push
  923  ls
  924  cat Day3_History.txt 
  925  git pull
  926  history >>  Day3_History.txt 
  927  git add . ; git commit -m "08-HealthCheck" ; git push
  928  git status 
  929  git config --list 
  930  cd ..
  931  ls
  932  rm -rf k8s-docker-vmware-08-June-2020/
  933  git clone https://github.com/amitvashisttech/k8s-docker-vmware-08-June-2020.git
  934  ls
  935  cd k8s-docker-vmware-08-June-2020/
  936  ls
  937  kubectl delete -f 02-K8s/08-HealthCheck/helloworld-healthcheck.yml 
  938  kubectl create  -f 02-K8s/08-HealthCheck/pod-prob-exec.yaml
  939  kubectl get pods 
  940  kubectl delete pod busybox-1 centos-1
  941  kubectl get pods 
  942  ls
  943  cat 02-K8s/08-HealthCheck/pod-prob-exec.yaml 
  944  kubectl get pods 
  945  kubectl describe pod liveness-exec
  946  kubectl get pods 
  947  cd ..
  948  ls
  949  cd k8s-docker-vmware-08-June-2020/
  950  ls
  951  history > Day3_History.txt 
